:py:mod:`nautobot_ssot_ipfabric.diffsync.adapter_ipfabric`
==========================================================

.. py:module:: nautobot_ssot_ipfabric.diffsync.adapter_ipfabric

.. autoapi-nested-parse::

   DiffSync adapter class for Ip Fabric.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.IPFabricDiffSync



Functions
~~~~~~~~~

.. autoapisummary::

   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.pseudo_management_interface



Attributes
~~~~~~~~~~

.. autoapisummary::

   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.logger
   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.CONFIG
   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.DEFAULT_INTERFACE_TYPE
   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.DEFAULT_INTERFACE_MTU
   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.DEFAULT_INTERFACE_MAC
   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.DEFAULT_DEVICE_ROLE
   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.DEFAULT_DEVICE_STATUS
   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.device_serial_max_length
   nautobot_ssot_ipfabric.diffsync.adapter_ipfabric.name_max_length


.. py:data:: logger
   

   

.. py:data:: CONFIG
   

   

.. py:data:: DEFAULT_INTERFACE_TYPE
   

   

.. py:data:: DEFAULT_INTERFACE_MTU
   

   

.. py:data:: DEFAULT_INTERFACE_MAC
   

   

.. py:data:: DEFAULT_DEVICE_ROLE
   

   

.. py:data:: DEFAULT_DEVICE_STATUS
   

   

.. py:data:: device_serial_max_length
   

   

.. py:data:: name_max_length
   

   

.. py:class:: IPFabricDiffSync(job, sync, client, *args, **kwargs)

   Bases: :py:obj:`nautobot_ssot_ipfabric.diffsync.DiffSyncModelAdapters`

   Nautobot adapter for DiffSync.

   .. py:method:: load_sites(self)

      Add IP Fabric Site objects as DiffSync Location models.


   .. py:method:: load_device_interfaces(self, device_model, interfaces, device_primary_ip)

      Create and load DiffSync Interface model objects for a specific device.


   .. py:method:: load(self)

      Load data from IP Fabric.



.. py:function:: pseudo_management_interface(hostname, device_interfaces, device_primary_ip)

   Return a dict for an non-existing interface for NAT management addresses.


